{"ast":null,"code":"var _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/AddProject.js\";\n\n/**\n * have to be class based to store user input field.  \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../../store/actions/projectActions';\n\nconst axios = require('axios');\n\nclass AddProject extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var bodyFormData = new FormData();\n      bodyFormData.set(\"hostName\", this.state.content);\n      bodyFormData.set(\"realMac\", this.state.title); // axios.post('http://localhost:5000/api/new_rpi', bodyFormData)\n      // .then(function (response) {\n      //   console.log(response);\n      // })\n      // .catch(function (error) {\n      //   console.log(error.response);\n      // });\n\n      axios({\n        method: 'post',\n        url: 'http://localhost:5000/api/new_rpi',\n        data: bodyFormData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add a new Sensor\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"MAC Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Hostname\"), React.createElement(\"textarea\", {\n      id: \"content\",\n      className: \"materialize-textarea\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1 z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: project => dispatch(addProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddProject);","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/AddProject.js"],"names":["React","Component","connect","addProject","axios","require","AddProject","state","title","content","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","bodyFormData","FormData","set","method","url","data","headers","then","response","console","log","catch","render","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["/**\n * have to be class based to store user input field.  \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../../store/actions/projectActions';\n\n\nconst axios = require('axios');\n\nclass AddProject extends Component {\n  state = {\n    title: '',\n    content: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"hostName\", this.state.content);\n    bodyFormData.set(\"realMac\", this.state.title);\n    // axios.post('http://localhost:5000/api/new_rpi', bodyFormData)\n    // .then(function (response) {\n    //   console.log(response);\n    // })\n    // .catch(function (error) {\n    //   console.log(error.response);\n    // });\n    axios({\n      method: 'post',\n      url: 'http://localhost:5000/api/new_rpi',\n      data: bodyFormData,\n      headers: {'Content-Type': 'multipart/form-data' }\n      })\n      .then(function (response) {\n          //handle success\n          console.log(response);\n      })\n      .catch(function (response) {\n          //handle error\n          console.log(response);\n      });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Add a new Sensor</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">MAC Address</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"content\">Hostname</label>\n              <textarea  id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn blue lighten-1 z-depth-0\">Add</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(AddProject);"]},"metadata":{},"sourceType":"module"}