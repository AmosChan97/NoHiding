{"ast":null,"code":"var _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/ChartEntry.js\";\nimport React from 'react';\nimport { Toggle } from \"react-toggle-component\";\nexport const ChartEntry = props => {\n  const chartEntries = props.chartEntries,\n        buttonChecked = props.buttonChecked;\n  console.log(\"CHECK\", check);\n\n  if (chartEntries !== undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, chartEntries.myAP && chartEntries.myAP.map((entry, index) => {\n      return React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, entry.AP_name), React.createElement(Toggle, {\n        name: entry.AP_name,\n        onToggle: e => console.log('onToggle', e.target.checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" No Data to show \"));\n  }\n};","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/ChartEntry.js"],"names":["React","Toggle","ChartEntry","props","chartEntries","buttonChecked","console","log","check","undefined","myAP","map","entry","index","AP_name","e","target","checked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,wBAArB;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,QAC3BC,YAD2B,GACID,KADJ,CAC3BC,YAD2B;AAAA,QACbC,aADa,GACIF,KADJ,CACbE,aADa;AAEnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBC,KAApB;;AACA,MAAIJ,YAAY,KAAKK,SAArB,EAAgC;AAC9B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIL,YAAY,CAACM,IAAb,IAAqBN,YAAY,CAACM,IAAb,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7D,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,KAAK,CAACE,OAAV,CADN,EAEM,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEF,KAAK,CAACE,OAApB;AAA6B,QAAA,QAAQ,EAAEC,CAAC,IAAIT,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,CAAC,CAACC,MAAF,CAASC,OAAjC,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,CADF;AAMD,KAPsB,CADzB,CADJ;AAYD,GAbD,MAaO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;AACF,CAvBM","sourcesContent":["import React from 'react';\nimport {Toggle} from \"react-toggle-component\"\n\nexport const ChartEntry = (props) => {\n  const { chartEntries, buttonChecked} = props;\n  console.log(\"CHECK\",check);\n  if (chartEntries !== undefined) {\n    return (\n        <div>\n          { chartEntries.myAP && chartEntries.myAP.map((entry, index) => {\n            return (\n              <label>\n                    <p>{entry.AP_name}</p>\n                    <Toggle name={entry.AP_name} onToggle={e => console.log('onToggle', e.target.checked)} />\n                </label>\n            )\n          }) }\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <p> No Data to show </p>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}