{"ast":null,"code":"const getJsonPromise = url => {\n  fetch(url).then(response => {\n    if (response.status !== 200) {\n      console.log(\"Looks like there was a problem. Status Code: \" + response.status);\n      return Promise.reject( //reject by returning a rejecting promise\n      \"Looks like there was a problem. Status Code: \" + response.status);\n    } // Examine the text in the response\n\n\n    response.json().then(data => {\n      console.log(data);\n      return data; //still need to return the data here\n    });\n  }).catch(function (err) {\n    console.log(\"Fetch Error :-S\", err); //return the reject again so the caller knows something went wrong\n\n    return Promise.reject(err);\n  });\n};\n\nconst initState = {};\ngetJsonPromise('http://localhost:5000/api/get_rpi_info').then(() => {\n  const projectReducer = (state = initState, action) => {\n    switch (action.type) {\n      case 'ADD_PROJECT':\n        console.log('created project', action.project);\n        break;\n\n      default:\n        break;\n    }\n\n    return state;\n  };\n});\nexport default projectReducer;","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/reducers/projectReducer.js"],"names":["getJsonPromise","url","fetch","then","response","status","console","log","Promise","reject","json","data","catch","err","initState","projectReducer","state","action","type","project"],"mappings":"AACA,MAAMA,cAAc,GAAIC,GAAD,IAAS;AAC9BC,EAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CACE,kDAAkDH,QAAQ,CAACC,MAD7D;AAGA,aAAOG,OAAO,CAACC,MAAR,EAAe;AACpB,wDAAkDL,QAAQ,CAACC,MADtD,CAAP;AAGD,KARe,CAUhB;;;AACAD,IAAAA,QAAQ,CAACM,IAAT,GAAgBP,IAAhB,CAAqBQ,IAAI,IAAI;AAC3BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAOA,IAAP,CAF2B,CAEf;AACb,KAHD;AAID,GAhBH,EAiBGC,KAjBH,CAiBS,UAAUC,GAAV,EAAe;AACpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,GAA/B,EADoB,CAEpB;;AACA,WAAOL,OAAO,CAACC,MAAR,CAAeI,GAAf,CAAP;AACD,GArBH;AAsBD,CAvBD;;AAyBA,MAAMC,SAAS,GAAG,EAAlB;AACAd,cAAc,CAAC,wCAAD,CAAd,CAAyDG,IAAzD,CAA+D,MAAM;AACnE,QAAMY,cAAc,GAAG,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AACtD,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,aAAL;AACEZ,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BU,MAAM,CAACE,OAAtC;AACA;;AACF;AACE;AALJ;;AAOA,WAAOH,KAAP;AACD,GATC;AAUD,CAXD;AAaA,eAAeD,cAAf","sourcesContent":["\nconst getJsonPromise = (url) => {\n  fetch(url)\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(//reject by returning a rejecting promise\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n      }\n\n      // Examine the text in the response\n      response.json().then(data => {\n        console.log(data);\n        return data;//still need to return the data here\n      });\n    })\n    .catch(function (err) {\n      console.log(\"Fetch Error :-S\", err);\n      //return the reject again so the caller knows something went wrong\n      return Promise.reject(err);\n    });\n};\n\nconst initState = {};\ngetJsonPromise('http://localhost:5000/api/get_rpi_info').then( () => {\n  const projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_PROJECT':\n      console.log('created project', action.project);\n      break;\n    default: \n      break;\n  }\n  return state;\n}\n});\n\nexport default projectReducer;"]},"metadata":{},"sourceType":"module"}