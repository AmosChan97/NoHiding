{"ast":null,"code":"var _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/AddRpi.js\";\n\n/**\n * have to be class based to store user input field.  \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../../store/actions/projectActions';\n\nconst axios = require('axios');\n\nclass AddRpi extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hostName: '',\n      realMac: '',\n      showResult: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n      if (this.state.showResult) this.setState({\n        showResult: false\n      });\n    };\n\n    this.handleSubmit_add = e => {\n      e.preventDefault();\n      axios.post('http://localhost:5000/api/add_rpi', {\n        hostName: this.state.hostName,\n        realMac: this.state.realMac\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n      this.setState({\n        showResult: true\n      });\n    };\n\n    this.handleSubmit_dlt = e => {\n      e.preventDefault();\n      axios.post('http://localhost:5000/api/dlt_rpi', {\n        hostName: this.state.hostName\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n      this.setState({\n        showResult: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit_add,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Add new RPI\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"hostName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Host Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"hostName\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"realMac\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"RPI Mac Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"realMac\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1 z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add\"), this.state.showResult && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Submitted to database: \", this.state.hostName))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit_dlt,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Delete existing RPI\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"hostName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Host Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"hostName\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1 z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Delete\"), this.state.showResult && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Deleted from database: \", this.state.hostName))));\n  }\n\n} //Async call to firebase database, NOT USED\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: project => dispatch(addProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddRpi);","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/AddRpi.js"],"names":["React","Component","connect","addProject","axios","require","AddRpi","state","hostName","realMac","showResult","handleChange","e","setState","target","id","value","handleSubmit_add","preventDefault","post","then","response","console","log","catch","error","handleSubmit_dlt","render","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["/**\n * have to be class based to store user input field.  \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../../store/actions/projectActions';\n\n\nconst axios = require('axios');\n\nclass AddRpi extends Component {\n  state = {\n    hostName: '',\n    realMac: '',\n    showResult: false\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n    if (this.state.showResult) this.setState({showResult: false});\n  }\n  handleSubmit_add = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/api/add_rpi', {\n      hostName: this.state.hostName,\n      realMac: this.state.realMac,\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error.response);\n    });\n    this.setState({showResult: true});\n\n  }\n  handleSubmit_dlt = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/api/dlt_rpi', {\n      hostName: this.state.hostName,\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error.response);\n    });\n    this.setState({showResult: true});\n\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit_add} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Add new RPI</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"hostName\">Host Name</label>\n              <input type=\"text\" id=\"hostName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"realMac\">RPI Mac Address</label>\n              <input type=\"text\" id=\"realMac\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn blue lighten-1 z-depth-0\">Add</button>\n              {this.state.showResult && <p>Submitted to database: {this.state.hostName}</p>}\n            </div>\n        </form>\n\n        <form onSubmit={this.handleSubmit_dlt} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Delete existing RPI</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"hostName\">Host Name</label>\n              <input type=\"text\" id=\"hostName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn blue lighten-1 z-depth-0\">Delete</button>\n              {this.state.showResult && <p>Deleted from database: {this.state.hostName}</p>}\n            </div>\n        </form>\n      </div>\n\n    )\n  }\n}\n\n\n//Async call to firebase database, NOT USED\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(AddRpi);"]},"metadata":{},"sourceType":"module"}