{"ast":null,"code":"import _objectSpread from \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/ProjectDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchPingData } from '../../store/actions/projectActions';\nimport { DataHeader } from './DataHeader';\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport classNames from 'classnames';\n/**\n * Specific details for each Pi Project\n */\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = date => this.setState({\n      date\n    });\n\n    this.state = {\n      success: false,\n      data: [],\n      date: [new Date('2019-01-01Z00:00:00:000'), new Date('3000-01-01Z00:00:00:000')],\n      myAPset: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPingData();\n    console.log(\"MYAPSET\", this.state.myAPset);\n  }\n\n  appendAPset() {\n    this.props.data.map((item, key) => {\n      // if (!this.state.myAPset.some(myAPitem => item.name === myAPitem.name)) {\n      this.setState(previousState => ({\n        myAPset: [...previousState.myAPset, item]\n      }));\n      console.log(item); // }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(prevProps);\n    console.log(this.props);\n\n    if (prevProps.data === undefined && this.props.data !== undefined) {\n      console.log(\"PLES\");\n      this.setState(_objectSpread({}, this.state, {\n        data: this.props.data\n      }));\n    }\n  }\n\n  render() {\n    this.appendAPset();\n    const id = this.props.match.params.id;\n    const ind = parseInt(id);\n    const project = this.props.projects;\n\n    if (ind === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \" section project-details grey darken-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0 grey darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classNames({\n          ['card-title']: true,\n          ['column']: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, project[ind].title, \" - \", id), React.createElement(\"span\", {\n        className: classNames({\n          ['card-title']: true,\n          ['column']: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Connected APs: \", id)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, project[ind].content))), React.createElement(\"div\", {\n        className: \"center-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        className: \"card-action grey darken-1\",\n        onChange: this.onChange,\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(DataHeader, {\n        dataEntries: this.props.data,\n        datePicker: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container section project-details grey darken-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Invalid ID- \", id, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"No Pis associated with this ID\"))));\n    }\n  }\n\n}\n\nconst matchStateToProps = globalState => {\n  return {\n    projects: globalState.project.projects,\n    data: globalState.project.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchPingData: fetchPingData\n}, dispatch);\n\nexport default connect(matchStateToProps, mapDispatchToProps)(ProjectDetails);","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/ProjectDetails.js"],"names":["React","Component","connect","bindActionCreators","fetchPingData","DataHeader","DateRangePicker","classNames","ProjectDetails","constructor","props","onChange","date","setState","state","success","data","Date","myAPset","componentDidMount","console","log","appendAPset","map","item","key","previousState","componentDidUpdate","prevProps","undefined","render","id","match","params","ind","parseInt","project","projects","title","content","matchStateToProps","globalState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {  bindActionCreators } from 'redux';\nimport { fetchPingData } from '../../store/actions/projectActions';\nimport { DataHeader } from './DataHeader';\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport classNames from 'classnames';\n\n/**\n * Specific details for each Pi Project\n */\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: false,\n      data: [],\n      date: [new Date('2019-01-01Z00:00:00:000'), new Date('3000-01-01Z00:00:00:000')],\n      myAPset: []  \n    }\n  }\n  onChange = date => this.setState({ date })\n\n  componentDidMount() {\n    this.props.fetchPingData();\n    \n    console.log(\"MYAPSET\", this.state.myAPset);\n  }\n  appendAPset() {\n    this.props.data.map((item, key) => {\n      // if (!this.state.myAPset.some(myAPitem => item.name === myAPitem.name)) {\n        this.setState(previousState => ({\n          myAPset: [...previousState.myAPset, item]\n        }));\n        console.log(item);\n      // }\n    });\n  }\n  componentDidUpdate(prevProps) {\n    console.log(prevProps);\n    console.log(this.props);\n    if (prevProps.data === undefined && this.props.data !== undefined) {\n      console.log(\"PLES\")\n      this.setState({\n        ...this.state,\n        data: this.props.data\n      })\n    }\n  }\n\n\n\n  render() {\n    this.appendAPset();\n    const { id } = this.props.match.params;\n    const ind = parseInt(id);\n    const project = this.props.projects\n    if (ind === 0) {\n    return (\n      <div>\n      <div className=\" section project-details grey darken-2\">\n        <div className=\"card z-depth-0 grey darken-1\">\n          <div className=\"card-content\">\n            <div className=\"row\">\n              <span className={classNames({['card-title']: true, ['column']: true})}>{project[ind].title} - {id}</span>\n              <span className={classNames({['card-title']: true, ['column']: true})}>Connected APs: {id}</span>\n              </div>\n            <p>{project[ind].content}</p>\n          </div>\n        </div>  \n        <div className=\"center-align\">\n        <DateRangePicker className=\"card-action grey darken-1\"\n          onChange={this.onChange}\n          value={this.state.date}\n        />\n      </div>\n        </div>\n        <div>\n            <DataHeader\n            dataEntries={this.props.data} datePicker={this.state.date}/>\n        </div>\n      </div>\n    )\n  } else {\n      return (\n        <div className=\"container section project-details grey darken-2\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n              <span className=\"card-title\">Invalid ID- {id} </span>\n              <p>No Pis associated with this ID</p>\n          </div>\n        </div>\n      </div>\n      )\n    }\n  }\n}\n\nconst matchStateToProps = (globalState) => {\n  return {\n    projects: globalState.project.projects,\n    data:  globalState.project.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => \nbindActionCreators({\n  fetchPingData: fetchPingData\n}, dispatch)\n\nexport default connect(matchStateToProps, mapDispatchToProps)(ProjectDetails);"]},"metadata":{},"sourceType":"module"}