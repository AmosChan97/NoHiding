{"ast":null,"code":"var _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/statistics/radarData.js\";\nimport React from 'react';\nimport { Radar } from 'react-chartjs-2';\n\nconst radarData = (rawData = []) => {\n  let fiveHz = [],\n      twoHz = [];\n  rawData.forEach((value, index) => {\n    if (value.RF_hz > 4000) {\n      fiveHz.push(value);\n    } else {\n      twoHz.push(value);\n    }\n  });\n  let fiveData = fiveHz[0];\n  let twoData = twoHz[0];\n\n  if (fiveData === undefined || twoData === undefined) {\n    return {\n      labels: ['test'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        pointBackgroundColor: 'rgba(179,181,198,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(179,181,198,1)',\n        data: [65, 59, 90, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        pointBackgroundColor: 'rgba(255,99,132,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255,99,132,1)',\n        data: [28, 48, 40, 19, 96, 27, 100]\n      }]\n    };\n  }\n\n  return {\n    labels: ['Google Direct Res', 'Google DNS Avg Res', 'RSSI', 'Signal Quality'],\n    datasets: [{\n      label: '5-GHz WiFi Band',\n      backgroundColor: 'rgba(179,181,198,0.2)',\n      borderColor: 'rgba(179,181,198,1)',\n      pointBackgroundColor: 'rgba(179,181,198,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(179,181,198,1)',\n      data: [fiveData.google_ping_ms, fiveData.DNS_ping_ms, fiveData.RSSI_dBm, fiveData.Signal_in_percent]\n    }, {\n      label: '2-4GHz Wifi Band',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      pointBackgroundColor: 'rgba(255,99,132,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(255,99,132,1)',\n      data: [twoData.google_ping_ms, twoData.DNS_ping_ms, twoData.RSSI_dBm, twoData.Signal_in_percent]\n    }]\n  };\n};\n\nexport const radarGraphMaker = (rawData = [], buttonState = [], apState = []) => {\n  if (rawData === undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n  const data = radarData(rawData, buttonState, apState);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Single comparison\"), React.createElement(Radar, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\nexport default radarGraphMaker;","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/statistics/radarData.js"],"names":["React","Radar","radarData","rawData","fiveHz","twoHz","forEach","value","index","RF_hz","push","fiveData","twoData","undefined","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","data","google_ping_ms","DNS_ping_ms","RSSI_dBm","Signal_in_percent","radarGraphMaker","buttonState","apState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Radar} from 'react-chartjs-2';\n\nconst radarData = (rawData = []) => {\n  let fiveHz = [], twoHz = [];\n  rawData.forEach((value, index) => {\n    if (value.RF_hz > 4000) {\n      fiveHz.push(value)\n    } else {\n      twoHz.push(value)\n    } \n  })\n  let fiveData = fiveHz[0];\n  let twoData = twoHz[0];\n  if (fiveData === undefined || twoData === undefined) {\n    return {\n      labels: ['test'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          backgroundColor: 'rgba(179,181,198,0.2)',\n          borderColor: 'rgba(179,181,198,1)',\n          pointBackgroundColor: 'rgba(179,181,198,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(179,181,198,1)',\n          data: [65, 59, 90, 81, 56, 55, 40]\n        },\n        {\n          label: 'My Second dataset',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          pointBackgroundColor: 'rgba(255,99,132,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(255,99,132,1)',\n          data: [28, 48, 40, 19, 96, 27, 100]\n        }\n      ]\n    }\n  }\n\n  return {\n    labels: ['Google Direct Res' ,'Google DNS Avg Res', 'RSSI', 'Signal Quality'],\n    datasets: [\n      {\n        label: '5-GHz WiFi Band',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        pointBackgroundColor: 'rgba(179,181,198,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(179,181,198,1)',\n        data: [fiveData.google_ping_ms, fiveData.DNS_ping_ms, fiveData.RSSI_dBm, fiveData.Signal_in_percent]\n      },\n      {\n        label: '2-4GHz Wifi Band',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        pointBackgroundColor: 'rgba(255,99,132,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255,99,132,1)',\n        data: [twoData.google_ping_ms, twoData.DNS_ping_ms, twoData.RSSI_dBm, twoData.Signal_in_percent]\n      }\n    ]\n  };\n} \n\nexport const radarGraphMaker = (rawData = [], buttonState=[], apState=[]) => {\n  if (rawData === undefined) {\n    return (\n      <div></div>\n    )\n  }\n  const data = radarData(rawData, buttonState, apState);\n  return (\n    <div>\n      <p>Single comparison</p>\n      <Radar data={data} \n\n      />\n    </div>\n  );\n}\n\nexport default radarGraphMaker;"]},"metadata":{},"sourceType":"module"}