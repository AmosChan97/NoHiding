{"ast":null,"code":"var _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/statistics/pieData.js\";\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\n/**\n * Sample pie chart settings from http://jerairrest.github.io/react-chartjs-2/\n * @param {string<array>} rawData of response status from remote sensor\n */\n\nconst pieData = (rawData = []) => {\n  let total = rawData.length;\n  let okRes = 0;\n  rawData.forEach(val => {\n    if (val === 'HTTP/1.1 200 OK') {\n      okRes++;\n    }\n  });\n  let pieData = [okRes, total - okRes];\n  return {\n    labels: ['Response OK', 'Response Bad'],\n    datasets: [{\n      data: pieData,\n      backgroundColor: ['#00FF00', '#FF000'],\n      hoverBackgroundColor: ['#00FF00', '#FF000']\n    }]\n  };\n};\n\nexport const pieComponentMaker = (allData = [], buttonState = []) => {\n  let responseData = allData.map(val => {\n    return val.HTTP_PING_ms;\n  });\n  const data = pieData(responseData);\n  return React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Google HTTP response\"), React.createElement(Pie, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\nexport default pieComponentMaker;","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/statistics/pieData.js"],"names":["React","Pie","pieData","rawData","total","length","okRes","forEach","val","labels","datasets","data","backgroundColor","hoverBackgroundColor","pieComponentMaker","allData","buttonState","responseData","map","HTTP_PING_ms"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA;;;;;AAIA,MAAMC,OAAO,GAAG,CAACC,OAAO,GAAG,EAAX,KAAkB;AAChC,MAAIC,KAAK,GAAGD,OAAO,CAACE,MAApB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgBC,GAAG,IAAI;AACrB,QAAIA,GAAG,KAAK,iBAAZ,EAA+B;AAC7BF,MAAAA,KAAK;AACN;AACF,GAJD;AAKA,MAAIJ,OAAO,GAAG,CACZI,KADY,EAEXF,KAAK,GAAGE,KAFG,CAAd;AAIA,SAAO;AACLG,IAAAA,MAAM,EAAE,CACN,aADM,EAEN,cAFM,CADH;AAKLC,IAAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,IAAI,EAAET,OADG;AAETU,MAAAA,eAAe,EAAE,CACjB,SADiB,EAEjB,QAFiB,CAFR;AAMTC,MAAAA,oBAAoB,EAAE,CACtB,SADsB,EAEtB,QAFsB;AANb,KAAD;AALL,GAAP;AAiBD,CA7BD;;AA+BA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,OAAO,GAAG,EAAX,EAAeC,WAAW,GAAC,EAA3B,KAAkC;AACjE,MAAIC,YAAY,GAAGF,OAAO,CAACG,GAAR,CAAaV,GAAD,IAAS;AACtC,WAAOA,GAAG,CAACW,YAAX;AACD,GAFkB,CAAnB;AAGA,QAAMR,IAAI,GAAGT,OAAO,CAACe,YAAD,CAApB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEN,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAXM;AAaP,eAAeG,iBAAf","sourcesContent":["import React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\n/**\n * Sample pie chart settings from http://jerairrest.github.io/react-chartjs-2/\n * @param {string<array>} rawData of response status from remote sensor\n */\nconst pieData = (rawData = []) => {\n  let total = rawData.length;\n  let okRes = 0;\n  rawData.forEach(val => {\n    if (val === 'HTTP/1.1 200 OK') {\n      okRes++;\n    }\n  })\n  let pieData = [\n    okRes,\n    (total - okRes)\n  ]\n  return {\n    labels: [\n      'Response OK',\n      'Response Bad'\n    ],\n    datasets: [{\n      data: pieData,\n      backgroundColor: [\n      '#00FF00',\n      '#FF000',\n      ],\n      hoverBackgroundColor: [\n      '#00FF00',\n      '#FF000'\n      ]\n    }]\n  }\n}\n\nexport const pieComponentMaker = (allData = [], buttonState=[]) => {\n  let responseData = allData.map((val) => {\n    return val.HTTP_PING_ms;\n  })\n  const data = pieData(responseData);\n  return (\n    <div className=\"center\">\n      <p>Google HTTP response</p>\n      <Pie data={data} />\n    </div>\n  );\n}\n\nexport default pieComponentMaker;"]},"metadata":{},"sourceType":"module"}