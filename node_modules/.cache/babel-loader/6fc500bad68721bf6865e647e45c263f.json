{"ast":null,"code":"var _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/AddProject.js\";\n\n/**\n * have to be class based to store user input field.  \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../../store/actions/projectActions';\n\nconst axios = require('axios');\n\nclass AddProject extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      formResult: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.post('http://localhost:5000/api/new_rpi', {\n        hostName: this.state.content,\n        realMac: this.state.title\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n      this.setState({\n        formResult: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"TEST\"), this.state.showResult && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\\"Submitted to database: \\\" \", this.state.content), React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Add a new Sensor\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"MAC Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Hostname\"), React.createElement(\"textarea\", {\n      id: \"content\",\n      className: \"materialize-textarea\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blue lighten-1 z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProject: project => dispatch(addProject(project))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddProject);","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/AddProject.js"],"names":["React","Component","connect","addProject","axios","require","AddProject","state","title","content","formResult","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","post","hostName","realMac","then","response","console","log","catch","error","render","showResult","mapDispatchToProps","dispatch","project"],"mappings":"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","sourcesContent":["/**\n * have to be class based to store user input field.  \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProject } from '../../store/actions/projectActions';\n\n\nconst axios = require('axios');\n\nclass AddProject extends Component {\n  state = {\n    title: '',\n    content: '',\n    formResult: false\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/api/new_rpi', {\n      hostName: this.state.content,\n      realMac: this.state.title\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error.response);\n    });\n    this.setState({formResult: true});\n\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <p>TEST</p>\n        {this.state.showResult && <p>\"Submitted to database: \" {this.state.content}</p>}\n            <h5 className=\"grey-text text-darken-3\">Add a new Sensor</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">MAC Address</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"content\">Hostname</label>\n              <textarea  id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn blue lighten-1 z-depth-0\">Add</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addProject: (project) => dispatch(addProject(project))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(AddProject);"]},"metadata":{},"sourceType":"module"}