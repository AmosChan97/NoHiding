{"ast":null,"code":"let initState = {};\n\nconst getJsonPromise = async url => {\n  await fetch(url).then(async response => {\n    if (response.status !== 200) {\n      console.log(\"Looks like there was a problem. Status Code: \" + response.status);\n      return Promise.reject( //reject by returning a rejecting promise\n      \"Looks like there was a problem. Status Code: \" + response.status);\n    } // Examine the text in the response\n\n\n    await response.json().then(data => {\n      initState = data;\n      return data;\n    });\n  }).catch(function (err) {\n    console.log(\"Fetch Error :-S\", err); //return the reject again so the caller knows something went wrong\n\n    return Promise.reject(err);\n  });\n};\n\nconsole.log(initState);\n\nconst projectReducer = async (state = initState, action) => {\n  await getJsonPromise('http://localhost:5000/api/get_rpi_info');\n\n  switch (action.type) {\n    case 'ADD_PROJECT':\n      console.log('created project', action.project);\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default projectReducer;","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/reducers/projectReducer.js"],"names":["initState","getJsonPromise","url","fetch","then","response","status","console","log","Promise","reject","json","data","catch","err","projectReducer","state","action","type","project"],"mappings":"AAAA,IAAIA,SAAS,GAAG,EAAhB;;AAEA,MAAMC,cAAc,GAAG,MAAOC,GAAP,IAAe;AACpC,QAAMC,KAAK,CAACD,GAAD,CAAL,CACHE,IADG,CACE,MAAMC,QAAN,IAAkB;AACtB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CACE,kDAAkDH,QAAQ,CAACC,MAD7D;AAGA,aAAOG,OAAO,CAACC,MAAR,EAAe;AACpB,wDAAkDL,QAAQ,CAACC,MADtD,CAAP;AAGD,KARqB,CAUtB;;;AACA,UAAMD,QAAQ,CAACM,IAAT,GAAgBP,IAAhB,CAAqBQ,IAAI,IAAI;AACjCZ,MAAAA,SAAS,GAAGY,IAAZ;AACA,aAAOA,IAAP;AACD,KAHK,CAAN;AAID,GAhBG,EAiBHC,KAjBG,CAiBG,UAAUC,GAAV,EAAe;AACpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,GAA/B,EADoB,CAEpB;;AACA,WAAOL,OAAO,CAACC,MAAR,CAAeI,GAAf,CAAP;AACD,GArBG,CAAN;AAsBD,CAvBD;;AAyBAP,OAAO,CAACC,GAAR,CAAYR,SAAZ;;AAEA,MAAMe,cAAc,GAAG,OAAOC,KAAK,GAAGhB,SAAf,EAA0BiB,MAA1B,KAAqC;AAC1D,QAAMhB,cAAc,CAAC,wCAAD,CAApB;;AAEA,UAAQgB,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACEX,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,MAAM,CAACE,OAAtC;AACA;;AACF;AACE;AALJ;;AAOA,SAAOH,KAAP;AACD,CAXD;;AAaA,eAAeD,cAAf","sourcesContent":["let initState = {};\n\nconst getJsonPromise = async (url) => {\n  await fetch(url)\n    .then(async response => {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(//reject by returning a rejecting promise\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n      }\n\n      // Examine the text in the response\n      await response.json().then(data => {\n        initState = data;\n        return data;\n      });\n    })\n    .catch(function (err) {\n      console.log(\"Fetch Error :-S\", err);\n      //return the reject again so the caller knows something went wrong\n      return Promise.reject(err);\n    });\n};\n\nconsole.log(initState);\n\nconst projectReducer = async (state = initState, action) => {\n  await getJsonPromise('http://localhost:5000/api/get_rpi_info');\n\n  switch (action.type) {\n    case 'ADD_PROJECT':\n      console.log('created project', action.project);\n      break;\n    default: \n      break;\n  }\n  return state;\n}\n\nexport default projectReducer;"]},"metadata":{},"sourceType":"module"}