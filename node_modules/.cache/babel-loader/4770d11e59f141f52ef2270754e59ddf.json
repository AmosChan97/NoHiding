{"ast":null,"code":"import _objectSpread from \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/ProjectDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchPingData } from '../../store/actions/projectActions';\nimport { fetchAP } from '../../store/actions/chartActions';\nimport { DataHeader } from './DataHeader';\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport classNames from 'classnames';\nimport { lineAuthGraph } from '../statistics/lineData';\nimport pieComponentMaker from '../statistics/pieData';\nimport barGraphMaker from '../statistics/barData';\nimport radarGraphMaker from '../statistics/radarData';\nimport { ChartEntry } from './ChartEntry';\n/**\n * Specific details for each Pi Project\n */\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = date => this.setState({\n      date\n    });\n\n    this.callbackFunction = childData => {\n      this.setState({\n        APbutton: childData\n      });\n    };\n\n    this.state = {\n      success: false,\n      data: [],\n      date: [new Date('2019-01-01Z00:00:00:000'), new Date('3000-01-01Z00:00:00:000')],\n      myAP: [],\n      APbutton: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPingData();\n    this.props.fetchAP();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data === undefined && this.props.data !== undefined) {\n      this.setState(_objectSpread({}, this.state, {\n        data: this.props.data\n      }));\n    }\n\n    if (prevProps.myAP === undefined && this.props.myAP !== undefined) {\n      this.setState(_objectSpread({}, this.state, {\n        myAP: this.props.myAP\n      }));\n    }\n  }\n\n  render() {\n    console.log(\"myAP\", this.props.myAP);\n    const id = this.props.match.params.id;\n    const ind = parseInt(id) - 1;\n    const project = this.props.projects;\n\n    if (ind === 0) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center center-align project-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0 white darken-1 center-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classNames({\n          ['card-title']: true,\n          ['column']: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, project[ind].title, \" - \", id)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Access Points Detected: \"), React.createElement(ChartEntry, {\n        chartEntries: this.props.myAP,\n        buttonState: this.state.APbutton,\n        parentCallback: this.callbackFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), console.log(\"BUTTONSTATE\", APbutton)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, project[ind].content), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Status: \", React.createElement(\"span\", {\n        className: \"green-text text-darken-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Connected\")))), React.createElement(\"div\", {\n        className: \"valign-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, lineAuthGraph(this.props.data, \"Authentication Response in Seconds\")), React.createElement(\"div\", {\n        className: \"center-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, pieComponentMaker(this.props.data)), React.createElement(\"div\", {\n        className: \"center-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, barGraphMaker(this.props.data)), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, radarGraphMaker(this.props.data))), React.createElement(\"div\", {\n        className: \"center-align grey darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(DateRangePicker, {\n        className: \"card-action grey darken-1\",\n        onChange: this.onChange,\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(DataHeader, {\n        dataEntries: this.props.data,\n        datePicker: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container section project-details grey darken-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Invalid ID- \", id, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"No Pis associated with this ID\"))));\n    }\n  }\n\n}\n\nconst matchStateToProps = globalState => {\n  console.log(\"GLOBAL\", globalState);\n  return {\n    projects: globalState.project.projects,\n    data: globalState.project.data,\n    myAP: globalState.myAP\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchPingData: fetchPingData,\n  fetchAP: fetchAP\n}, dispatch);\n\nexport default connect(matchStateToProps, mapDispatchToProps)(ProjectDetails);","map":{"version":3,"sources":["/home/little_peter/Desktop/front_end_wifi_monitoring/poketimes/src/components/projects/ProjectDetails.js"],"names":["React","Component","connect","bindActionCreators","fetchPingData","fetchAP","DataHeader","DateRangePicker","classNames","lineAuthGraph","pieComponentMaker","barGraphMaker","radarGraphMaker","ChartEntry","ProjectDetails","constructor","props","onChange","date","setState","callbackFunction","childData","APbutton","state","success","data","Date","myAP","componentDidMount","componentDidUpdate","prevProps","undefined","render","console","log","id","match","params","ind","parseInt","project","projects","title","content","matchStateToProps","globalState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {  bindActionCreators } from 'redux';\nimport { fetchPingData } from '../../store/actions/projectActions';\nimport { fetchAP } from '../../store/actions/chartActions';\nimport { DataHeader } from './DataHeader';\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport classNames from 'classnames';\nimport { lineAuthGraph }  from '../statistics/lineData';\nimport pieComponentMaker from '../statistics/pieData';\nimport barGraphMaker from '../statistics/barData';\nimport radarGraphMaker from '../statistics/radarData';\nimport { ChartEntry } from './ChartEntry';\n\n/**\n * Specific details for each Pi Project\n */\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: false,\n      data: [],\n      date: [new Date('2019-01-01Z00:00:00:000'), new Date('3000-01-01Z00:00:00:000')],\n      myAP: [],\n      APbutton: []\n    }\n  }\n\n  onChange = date => this.setState({ date })\n\n  componentDidMount() {\n    this.props.fetchPingData();\n    this.props.fetchAP();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data === undefined && this.props.data !== undefined) {\n      this.setState({\n        ...this.state,\n        data: this.props.data\n      })\n    }\n    if (prevProps.myAP === undefined && this.props.myAP !== undefined) {\n      this.setState({\n        ...this.state,\n        myAP: this.props.myAP\n      })\n    }\n  }\n  callbackFunction = (childData) => {\n    this.setState({APbutton: childData})\n}\n  render() {\n    console.log(\"myAP\", this.props.myAP)\n    const { id } = this.props.match.params;\n    const ind = parseInt(id) - 1;\n    const project = this.props.projects\n    if (ind === 0) {\n    return (\n      <div className=\"row\">\n      <div className=\"center center-align project-details\">\n        <div className=\"card z-depth-0 white darken-1 center-align\">\n          <div className=\"card-content\">\n            <div>\n              <span className={classNames({['card-title']: true, ['column']: true})}>{project[ind].title} - {id}</span>\n              </div>               \n              <div>\n                <p>Access Points Detected: </p>\n                <ChartEntry\n                  chartEntries={this.props.myAP} buttonState={this.state.APbutton} parentCallback = {this.callbackFunction}/>\n                  {console.log(\"BUTTONSTATE\", APbutton)}\n              </div>\n            <p>{project[ind].content}</p>\n            <p> Status: <span className=\"green-text text-darken-2\"> Connected</span></p>\n          </div>\n        </div>\n        <div className=\"valign-wrapper\">\n          {lineAuthGraph(this.props.data, \"Authentication Response in Seconds\")}\n        </div>\n        <div className=\"center-align\">\n          {pieComponentMaker(this.props.data)}\n        </div>\n        <div className=\"center-align\">\n          {barGraphMaker(this.props.data)}\n        </div>\n        <div className=\"center\">\n          {radarGraphMaker(this.props.data)}\n        </div>\n        </div>\n             <div className=\"center-align grey darken-1\">\n             <DateRangePicker className=\"card-action grey darken-1\"\n              onChange={this.onChange}\n              value={this.state.date}/>\n            <DataHeader\n            dataEntries={this.props.data} datePicker={this.state.date}/>\n             </div> \n      </div>\n    )\n  } else {\n      return (\n        <div className=\"container section project-details grey darken-2\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n              <span className=\"card-title\">Invalid ID- {id} </span>\n              <p>No Pis associated with this ID</p>\n          </div>\n        </div>\n      </div>\n      )\n    }\n  }\n}\n\nconst matchStateToProps = (globalState) => {\n  console.log(\"GLOBAL\", globalState);\n  return {\n    projects: globalState.project.projects,\n    data:  globalState.project.data,\n    myAP: globalState.myAP\n  }\n}\n\nconst mapDispatchToProps = dispatch => \nbindActionCreators({\n  fetchPingData: fetchPingData,\n  fetchAP: fetchAP\n}, dispatch)\n\nexport default connect(matchStateToProps, mapDispatchToProps)(ProjectDetails);"]},"metadata":{},"sourceType":"module"}